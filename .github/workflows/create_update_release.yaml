name: Create and Update Releases

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  get-release:
    runs-on: ubuntu-latest
    outputs: 
      latest_release: ${{ steps.get_latest_release.outputs.latest_release }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get the latest release tag
        id: get_latest_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_RELEASE=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "none")
          echo "Latest release tag: $LATEST_RELEASE"
          echo "::set-output name=latest_release::$LATEST_RELEASE"
          echo "latest_release=${latest_release}" >> $GITHUB_ENV
        continue-on-error: true

  create-release:
    needs: get-release
    runs-on: ubuntu-latest
    if: needs.get-release.outputs.latest_release == ''
    steps:
      - name: print latest release output
        run: echo "Latest release ${{ needs.get-release.outputs.latest_release }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Release doesn't exist so create one
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v1.0.0 --generate-notes --prerelease=false
          echo "Release created"
      
      - name: Zip files of folders
        id: zip_folders
        run: |
          mkdir -p temp
          for folder in */; do
            if [ -d "$folder" ]; then
              folder_name=$(basename "$folder")
              zip -r "temp/${folder_name}.zip" "$folder_name"
            fi
          done
          echo "Zip files created"
    
      - name: upload files to the release
        id: upload_files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in temp/*.zip; do
            gh release upload v1.0.0 "$file" --clobber
            echo "Uploaded $file, waiting to avoid rate limits..."
            sleep 3  
          done
    
      - name: clean up
        run: |
          rm -r temp

  update-release:
    needs: get-release
    runs-on: ubuntu-latest
    if: needs.get-release.outputs.latest_release != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch the latest release tag from remote
        run: |
          git fetch origin refs/tags/${{ env.latest_release }}:refs/tags/${{ env.latest_release }}

      - name: Generate file list
        id: generate_file_list
        run: |
          FILE_LIST=$(git diff --name-only HEAD $(git describe --tags --abbrev=0))
          echo "FILE_LIST=$FILE_LIST" >> $GITHUB_ENV
        
      - name: Upload changed files
        if env.FILE_LIST != ''
        run: |
          VERSION="${{ needs.get-release.outputs.latest_release }}"
          IFS=$'\n' read -d '' -r -a FILES <<< "$FILE_LIST"
          for FILE in "${FILES[@]}"; do
            zip -r "changed_files.zip" "$FILE"
            gh release upload "$VERSION" "changed_files.zip" --clobber
            echo "Uploded $FILE"
          done

      - name: clean up
        run: |
          rm changed_files.zip